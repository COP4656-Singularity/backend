swagger: '2.0'
info:
  version: "0.0.1"
  title: Singularity
  description: API to support the Singularity Mobile To-Do App
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /list:
    get:
      description: Returns list objects for the current user.
      operationId: getLists
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: to-do get response
          schema:
            type: array
            items:
              $ref: '#/definitions/list'
    post:
      description: Creates a new to-do list.
      operationId: addList
      produces:
        - application/json
      parameters:
        - name: id
          in: body
          description: to-do list to add
          required: true
          schema:
            $ref: '#/definitions/newList'
      responses:
        '200':
          description: to-do post response
          schema:
            type: array
            items:
              $ref: '#/definitions/list'
  /list/{id}:
    get:
      description: Returns a a specific list object if the object is owned by the current user or permitted to view.
      operationId: getListById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: Returns a set of list objects that are owned by the current user or permitted to view.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            title: listObject
            type: array
            items:
              $ref: '#/definitions/list'
    delete:
      description: deletes a single to-do list based on the ID supplied
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          description: Id of list to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: to-do list deleted
  /task:
    post:
      description: Adds a task to a given list.
      operationId: addTask
      produces:
        - application/json
      parameters:
        - name: id
          in: body
          description: to-do task to add
          required: true
          schema:
            $ref: '#/definitions/newTask'
      responses:
        '200':
          description: to-do post response
          schema:
            type: array
            items:
              $ref: '#/definitions/task'
  /task/withparent/{id}:
    get:
      description: Returns a set of tasks having the specified parent.
      operationId: getTasksWithParent
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: Returns a set of task objects that have the specified parent.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            title: taskObject
            type: array
            items:
              $ref: '#/definitions/task'
  /task/{id}:
    get:
      description: Returns a task object.
      operationId: getTaskById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: Returns a task object.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful response
          schema:
            title: taskObject
            type: array
            items:
              $ref: '#/definitions/task'
    delete:
      description: deletes a single to-do list based on the ID supplied
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: Id of task to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: to-do task deleted
definitions:
  list:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      note:
        type: string
      complete:
        type: boolean
  newList:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      note:
        type: string
      complete:
        type: boolean
  task:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      note:
        type: string
      complete:
        type: boolean
  newTask:
    type: object
    required:
      - id
      - name
      - parent
    properties:
      id:
        type: integer
        format: int64
      parent:
        type: integer
        format: int64
      name:
        type: string
      note:
        type: string
      complete:
        type: boolean
